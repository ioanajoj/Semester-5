Grammar

    0 $accept: program $end

    1 program: START list_stmt END

    2 list_stmt: stmt
    3          | stmt COMMA list_stmt

    4 stmt: assignstmt
    5     | ifstmt
    6     | whilestmt
    7     | printstmt

    8 assignstmt: ID IS expression

    9 ifstmt: 'i' expression stmt

   10 whilestmt: 'w' expression stmt

   11 printstmt: PRINT expression

   12 expression: element
   13           | element '+' element
   14           | INTEGER '-' INTEGER
   15           | INTEGER '*' INTEGER
   16           | INTEGER '/' INTEGER

   17 element: ID
   18        | INTEGER
   19        | BOOL
   20        | STRING
   21        | COLLECTION


Terminals, with rules where they appear

$end (0) 0
'*' (42) 15
'+' (43) 13
'-' (45) 14
'/' (47) 16
'i' (105) 9
'w' (119) 10
error (256)
INTEGER (258) 14 15 16 18
ID (259) 8 17
STRING (260) 20
BOOL (261) 19
COLLECTION (262) 21
START (263) 1
END (264) 1
IS (265) 8
PRINT (266) 11
COMMA (267) 3


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
list_stmt (21)
    on left: 2 3, on right: 1 3
stmt (22)
    on left: 4 5 6 7, on right: 2 3 9 10
assignstmt (23)
    on left: 8, on right: 4
ifstmt (24)
    on left: 9, on right: 5
whilestmt (25)
    on left: 10, on right: 6
printstmt (26)
    on left: 11, on right: 7
expression (27)
    on left: 12 13 14 15 16, on right: 8 9 10 11
element (28)
    on left: 17 18 19 20 21, on right: 12 13


state 0

    0 $accept: . program $end

    START  shift, and go to state 1

    program  go to state 2


state 1

    1 program: START . list_stmt END

    ID     shift, and go to state 3
    PRINT  shift, and go to state 4
    'i'    shift, and go to state 5
    'w'    shift, and go to state 6

    list_stmt   go to state 7
    stmt        go to state 8
    assignstmt  go to state 9
    ifstmt      go to state 10
    whilestmt   go to state 11
    printstmt   go to state 12


state 2

    0 $accept: program . $end

    $end  shift, and go to state 13


state 3

    8 assignstmt: ID . IS expression

    IS  shift, and go to state 14


state 4

   11 printstmt: PRINT . expression

    INTEGER     shift, and go to state 15
    ID          shift, and go to state 16
    STRING      shift, and go to state 17
    BOOL        shift, and go to state 18
    COLLECTION  shift, and go to state 19

    expression  go to state 20
    element     go to state 21


state 5

    9 ifstmt: 'i' . expression stmt

    INTEGER     shift, and go to state 15
    ID          shift, and go to state 16
    STRING      shift, and go to state 17
    BOOL        shift, and go to state 18
    COLLECTION  shift, and go to state 19

    expression  go to state 22
    element     go to state 21


state 6

   10 whilestmt: 'w' . expression stmt

    INTEGER     shift, and go to state 15
    ID          shift, and go to state 16
    STRING      shift, and go to state 17
    BOOL        shift, and go to state 18
    COLLECTION  shift, and go to state 19

    expression  go to state 23
    element     go to state 21


state 7

    1 program: START list_stmt . END

    END  shift, and go to state 24


state 8

    2 list_stmt: stmt .
    3          | stmt . COMMA list_stmt

    COMMA  shift, and go to state 25

    $default  reduce using rule 2 (list_stmt)


state 9

    4 stmt: assignstmt .

    $default  reduce using rule 4 (stmt)


state 10

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


state 11

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


state 12

    7 stmt: printstmt .

    $default  reduce using rule 7 (stmt)


state 13

    0 $accept: program $end .

    $default  accept


state 14

    8 assignstmt: ID IS . expression

    INTEGER     shift, and go to state 15
    ID          shift, and go to state 16
    STRING      shift, and go to state 17
    BOOL        shift, and go to state 18
    COLLECTION  shift, and go to state 19

    expression  go to state 26
    element     go to state 21


state 15

   14 expression: INTEGER . '-' INTEGER
   15           | INTEGER . '*' INTEGER
   16           | INTEGER . '/' INTEGER
   18 element: INTEGER .

    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 18 (element)


state 16

   17 element: ID .

    $default  reduce using rule 17 (element)


state 17

   20 element: STRING .

    $default  reduce using rule 20 (element)


state 18

   19 element: BOOL .

    $default  reduce using rule 19 (element)


state 19

   21 element: COLLECTION .

    $default  reduce using rule 21 (element)


state 20

   11 printstmt: PRINT expression .

    $default  reduce using rule 11 (printstmt)


state 21

   12 expression: element .
   13           | element . '+' element

    '+'  shift, and go to state 30

    $default  reduce using rule 12 (expression)


state 22

    9 ifstmt: 'i' expression . stmt

    ID     shift, and go to state 3
    PRINT  shift, and go to state 4
    'i'    shift, and go to state 5
    'w'    shift, and go to state 6

    stmt        go to state 31
    assignstmt  go to state 9
    ifstmt      go to state 10
    whilestmt   go to state 11
    printstmt   go to state 12


state 23

   10 whilestmt: 'w' expression . stmt

    ID     shift, and go to state 3
    PRINT  shift, and go to state 4
    'i'    shift, and go to state 5
    'w'    shift, and go to state 6

    stmt        go to state 32
    assignstmt  go to state 9
    ifstmt      go to state 10
    whilestmt   go to state 11
    printstmt   go to state 12


state 24

    1 program: START list_stmt END .

    $default  reduce using rule 1 (program)


state 25

    3 list_stmt: stmt COMMA . list_stmt

    ID     shift, and go to state 3
    PRINT  shift, and go to state 4
    'i'    shift, and go to state 5
    'w'    shift, and go to state 6

    list_stmt   go to state 33
    stmt        go to state 8
    assignstmt  go to state 9
    ifstmt      go to state 10
    whilestmt   go to state 11
    printstmt   go to state 12


state 26

    8 assignstmt: ID IS expression .

    $default  reduce using rule 8 (assignstmt)


state 27

   14 expression: INTEGER '-' . INTEGER

    INTEGER  shift, and go to state 34


state 28

   15 expression: INTEGER '*' . INTEGER

    INTEGER  shift, and go to state 35


state 29

   16 expression: INTEGER '/' . INTEGER

    INTEGER  shift, and go to state 36


state 30

   13 expression: element '+' . element

    INTEGER     shift, and go to state 37
    ID          shift, and go to state 16
    STRING      shift, and go to state 17
    BOOL        shift, and go to state 18
    COLLECTION  shift, and go to state 19

    element  go to state 38


state 31

    9 ifstmt: 'i' expression stmt .

    $default  reduce using rule 9 (ifstmt)


state 32

   10 whilestmt: 'w' expression stmt .

    $default  reduce using rule 10 (whilestmt)


state 33

    3 list_stmt: stmt COMMA list_stmt .

    $default  reduce using rule 3 (list_stmt)


state 34

   14 expression: INTEGER '-' INTEGER .

    $default  reduce using rule 14 (expression)


state 35

   15 expression: INTEGER '*' INTEGER .

    $default  reduce using rule 15 (expression)


state 36

   16 expression: INTEGER '/' INTEGER .

    $default  reduce using rule 16 (expression)


state 37

   18 element: INTEGER .

    $default  reduce using rule 18 (element)


state 38

   13 expression: element '+' element .

    $default  reduce using rule 13 (expression)
